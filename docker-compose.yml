services:
  frontend:
    build:
      context: ./frontend
    container_name: frontend-container   # Имя контейнера для фронтенда
    volumes:
      - frontend-dist:/app/dist
    networks:
      - network
    environment:
      - NODE_ENV=production
    command: sh -c "npm run build && tail -f /dev/null"

  backend:
    build:
      context: ./backend
    container_name: backend-container   # Имя контейнера для бэкенда
    ports:
      - "3000:${BACKEND_PORT}"
    environment:
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USER: ${POSTGRES_USER}
      DB_PASSWORD: ${POSTGRES_PASSWORD}
      DB_NAME: ${POSTGRES_DB}
    networks:
      - network
    volumes:
      - backend-dist:/app/dist

  postgres:
    image: postgres:16
    restart: always
    environment:
      POSTGRES_USER: 1
      POSTGRES_PASSWORD: 2
      POSTGRES_DB: afisha
      POSTGRES_SHEMA: public
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - network
    ports:
      - "5432:5432"
  pgadmin:
    image: dpage/pgadmin4
    restart: always
    ports:
      - "5050:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
    depends_on:
      - postgres
    networks:
      - network

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
    volumes:
      - ./frontend/dist:/usr/share/nginx/html:ro
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - frontend
      - backend

volumes:
  frontend-dist:  # Это volume для фронтенда, чтобы раздавать файлы через Nginx
  backend-dist:
  pgdata:

networks:
  network:  # Создаём сеть с названием mynetwork
    driver: bridge
